[tool.poetry]
name = "zone1tube"
version = "0.1.0"
description = ""
authors = ["David Brett <davidbrett88@gmail.com>"]
readme = "README.md"
packages = [{ include = "zone1tube" }]

[tool.poetry.dependencies]
python = "^3.12"
pydantic = "^2.7.1"
typer = "^0.12.3"
scipy = "^1.13.1"
numpy = "^1.26.4"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
ruff = "^0.4.4"
pyright = "^1.1.363"
isort = "^5.13.2"
pre-commit = "^3.7.1"

[tool.poetry.group.notebook]
optional = true

[tool.poetry.group.notebook.dependencies]
jupyter = "^1.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
skip = [".venv"]

[tool.pyright]
include = ["zone1tube"]
exclude = ["**/__pycache__"]
pythonVersion = "3.12"
pythonPlatform = "Linux"
reportMissingImports = true
reportUnusedImport = true
reportMatchNotExhaustive = true
reportDuplicateImport = true

[tool.ruff]
# Exclude a variety of commonly ignored directories.
extend-include = ["*.ipynb"]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F", "ASYNC", "TRIO", "FBT", "T20", "C90", "B", "SIM", "ARG", "C4", "Q", "RET"]
ignore = ["T201"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"